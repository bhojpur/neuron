package cudnn

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/* WAS Generated by gencudnn. DO NOT EDIT */

// #include <cudnn.h>
import "C"
import (
	"runtime"
	"unsafe"
)

// FusedOpConsts is a representation of cudnnFusedOpsConstParamPack_t.
type FusedOpConsts struct {
	internal C.cudnnFusedOpsConstParamPack_t

	ops        FusedOps
	paramLabel FusedOpsConstParamLabel
	param      Memory
}

// NewFusedOpConsts creates a new FusedOpConsts.
func NewFusedOpConsts(ops FusedOps, paramLabel FusedOpsConstParamLabel, param Memory) (retVal *FusedOpConsts, err error) {
	var internal C.cudnnFusedOpsConstParamPack_t
	if err := result(C.cudnnCreateFusedOpsConstParamPack(&internal, ops.C())); err != nil {
		return nil, err
	}

	if err := result(C.cudnnSetFusedOpsConstParamPackAttribute(internal, paramLabel.C(), unsafe.Pointer(param.Uintptr()))); err != nil {
		return nil, err
	}

	retVal = &FusedOpConsts{
		internal:   internal,
		paramLabel: paramLabel,
		param:      param,
		ops:        ops,
	}
	runtime.SetFinalizer(retVal, destroyFusedOpConsts)
	return retVal, nil
}

// C returns the internal cgo representation.
func (f *FusedOpConsts) C() C.cudnnFusedOpsConstParamPack_t { return f.internal }

// Ops returns the ops that were fused.
func (f *FusedOpConsts) Ops() FusedOps { return f.ops }

// ParamLabel returns the internal paramLabel.
func (f *FusedOpConsts) ParamLabel() FusedOpsConstParamLabel { return f.paramLabel }

// Param returns the internal param.
func (f *FusedOpConsts) Param() Memory { return f.param }

func destroyFusedOpConsts(obj *FusedOpConsts) { C.cudnnDestroyFusedOpsConstParamPack(obj.internal) }
