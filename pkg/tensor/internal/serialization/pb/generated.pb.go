// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: pkg/tensor/internal/IDLs/generated.proto

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package pb

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Triangle int32

const (
	Triangle_NOT_TRIANGLE Triangle = 0
	Triangle_UPPER        Triangle = 1
	Triangle_LOWER        Triangle = 2
	Triangle_SYMMETRIC    Triangle = 3
)

// Enum value maps for Triangle.
var (
	Triangle_name = map[int32]string{
		0: "NOT_TRIANGLE",
		1: "UPPER",
		2: "LOWER",
		3: "SYMMETRIC",
	}
	Triangle_value = map[string]int32{
		"NOT_TRIANGLE": 0,
		"UPPER":        1,
		"LOWER":        2,
		"SYMMETRIC":    3,
	}
)

func (x Triangle) Enum() *Triangle {
	p := new(Triangle)
	*p = x
	return p
}

func (x Triangle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Triangle) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_tensor_internal_IDLs_generated_proto_enumTypes[0].Descriptor()
}

func (Triangle) Type() protoreflect.EnumType {
	return &file_pkg_tensor_internal_IDLs_generated_proto_enumTypes[0]
}

func (x Triangle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Triangle.Descriptor instead.
func (Triangle) EnumDescriptor() ([]byte, []int) {
	return file_pkg_tensor_internal_IDLs_generated_proto_rawDescGZIP(), []int{0}
}

type AP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape   []int32  `protobuf:"varint,1,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Strides []int32  `protobuf:"varint,2,rep,packed,name=strides,proto3" json:"strides,omitempty"`
	O       uint32   `protobuf:"varint,3,opt,name=o,proto3" json:"o,omitempty"`
	T       Triangle `protobuf:"varint,4,opt,name=t,proto3,enum=internal.IDLs.Triangle" json:"t,omitempty"`
}

func (x *AP) Reset() {
	*x = AP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AP) ProtoMessage() {}

func (x *AP) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AP.ProtoReflect.Descriptor instead.
func (*AP) Descriptor() ([]byte, []int) {
	return file_pkg_tensor_internal_IDLs_generated_proto_rawDescGZIP(), []int{0}
}

func (x *AP) GetShape() []int32 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *AP) GetStrides() []int32 {
	if x != nil {
		return x.Strides
	}
	return nil
}

func (x *AP) GetO() uint32 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *AP) GetT() Triangle {
	if x != nil {
		return x.T
	}
	return Triangle_NOT_TRIANGLE
}

type Dense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape   []int32  `protobuf:"varint,1,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Strides []int32  `protobuf:"varint,2,rep,packed,name=strides,proto3" json:"strides,omitempty"`
	O       uint32   `protobuf:"varint,3,opt,name=o,proto3" json:"o,omitempty"`
	T       Triangle `protobuf:"varint,4,opt,name=t,proto3,enum=internal.IDLs.Triangle" json:"t,omitempty"`
	Type    string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Data    []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Dense) Reset() {
	*x = Dense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dense) ProtoMessage() {}

func (x *Dense) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dense.ProtoReflect.Descriptor instead.
func (*Dense) Descriptor() ([]byte, []int) {
	return file_pkg_tensor_internal_IDLs_generated_proto_rawDescGZIP(), []int{1}
}

func (x *Dense) GetShape() []int32 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *Dense) GetStrides() []int32 {
	if x != nil {
		return x.Strides
	}
	return nil
}

func (x *Dense) GetO() uint32 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *Dense) GetT() Triangle {
	if x != nil {
		return x.T
	}
	return Triangle_NOT_TRIANGLE
}

func (x *Dense) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Dense) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MaskedDense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape      []int32  `protobuf:"varint,1,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Strides    []int32  `protobuf:"varint,2,rep,packed,name=strides,proto3" json:"strides,omitempty"`
	O          uint32   `protobuf:"varint,3,opt,name=o,proto3" json:"o,omitempty"`
	T          Triangle `protobuf:"varint,4,opt,name=t,proto3,enum=internal.IDLs.Triangle" json:"t,omitempty"`
	Type       string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Data       []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Mask       []bool   `protobuf:"varint,7,rep,packed,name=mask,proto3" json:"mask,omitempty"`
	MaskIsSoft []bool   `protobuf:"varint,8,rep,packed,name=mask_is_soft,json=maskIsSoft,proto3" json:"mask_is_soft,omitempty"`
}

func (x *MaskedDense) Reset() {
	*x = MaskedDense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskedDense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskedDense) ProtoMessage() {}

func (x *MaskedDense) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskedDense.ProtoReflect.Descriptor instead.
func (*MaskedDense) Descriptor() ([]byte, []int) {
	return file_pkg_tensor_internal_IDLs_generated_proto_rawDescGZIP(), []int{2}
}

func (x *MaskedDense) GetShape() []int32 {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *MaskedDense) GetStrides() []int32 {
	if x != nil {
		return x.Strides
	}
	return nil
}

func (x *MaskedDense) GetO() uint32 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *MaskedDense) GetT() Triangle {
	if x != nil {
		return x.T
	}
	return Triangle_NOT_TRIANGLE
}

func (x *MaskedDense) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MaskedDense) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MaskedDense) GetMask() []bool {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *MaskedDense) GetMaskIsSoft() []bool {
	if x != nil {
		return x.MaskIsSoft
	}
	return nil
}

var File_pkg_tensor_internal_IDLs_generated_proto protoreflect.FileDescriptor

var file_pkg_tensor_internal_IDLs_generated_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x49, 0x44, 0x4c, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x4c, 0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x82, 0x01, 0x0a, 0x02, 0x41, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x01, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0d, 0xfa, 0xde, 0x1f, 0x09, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x01, 0x6f, 0x12, 0x25, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x4c, 0x73, 0x2e, 0x54,
	0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x01, 0x74, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xf0, 0xa1, 0x1f, 0x00, 0x22, 0xad, 0x01, 0x0a, 0x05, 0x44, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x01, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0d, 0xfa, 0xde, 0x1f, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x01, 0x6f, 0x12, 0x25, 0x0a, 0x01, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x49, 0x44, 0x4c, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x01, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xf0, 0xa1, 0x1f, 0x00, 0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x44,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x01, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x0d, 0xfa, 0xde, 0x1f, 0x09, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x01,
	0x6f, 0x12, 0x25, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x49, 0x44, 0x4c, 0x73, 0x2e, 0x54, 0x72, 0x69,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x01, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x73, 0x5f,
	0x73, 0x6f, 0x66, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x6b,
	0x49, 0x73, 0x53, 0x6f, 0x66, 0x74, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xf0, 0xa1, 0x1f, 0x00,
	0x2a, 0x85, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x4e, 0x4f, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x41, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x00, 0x1a,
	0x0f, 0x8a, 0x9d, 0x20, 0x0b, 0x4e, 0x6f, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x50, 0x50, 0x45, 0x52, 0x10, 0x01, 0x1a, 0x09, 0x8a, 0x9d, 0x20,
	0x05, 0x55, 0x70, 0x70, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10,
	0x02, 0x1a, 0x09, 0x8a, 0x9d, 0x20, 0x05, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x59, 0x4d, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x10, 0x03, 0x1a, 0x0d, 0x8a, 0x9d, 0x20,
	0x09, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x1a, 0x0c, 0xc0, 0xa4, 0x1e, 0x00,
	0x88, 0xa3, 0x1e, 0x00, 0xa8, 0xa4, 0x1e, 0x00, 0x42, 0x4b, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x6f, 0x6a, 0x70, 0x75, 0x72, 0x2f, 0x6e,
	0x65, 0x75, 0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0xa0, 0xe3, 0x1e,
	0x01, 0xe0, 0xe2, 0x1e, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_tensor_internal_IDLs_generated_proto_rawDescOnce sync.Once
	file_pkg_tensor_internal_IDLs_generated_proto_rawDescData = file_pkg_tensor_internal_IDLs_generated_proto_rawDesc
)

func file_pkg_tensor_internal_IDLs_generated_proto_rawDescGZIP() []byte {
	file_pkg_tensor_internal_IDLs_generated_proto_rawDescOnce.Do(func() {
		file_pkg_tensor_internal_IDLs_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_tensor_internal_IDLs_generated_proto_rawDescData)
	})
	return file_pkg_tensor_internal_IDLs_generated_proto_rawDescData
}

var file_pkg_tensor_internal_IDLs_generated_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_tensor_internal_IDLs_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_tensor_internal_IDLs_generated_proto_goTypes = []interface{}{
	(Triangle)(0),       // 0: internal.IDLs.Triangle
	(*AP)(nil),          // 1: internal.IDLs.AP
	(*Dense)(nil),       // 2: internal.IDLs.Dense
	(*MaskedDense)(nil), // 3: internal.IDLs.MaskedDense
}
var file_pkg_tensor_internal_IDLs_generated_proto_depIdxs = []int32{
	0, // 0: internal.IDLs.AP.t:type_name -> internal.IDLs.Triangle
	0, // 1: internal.IDLs.Dense.t:type_name -> internal.IDLs.Triangle
	0, // 2: internal.IDLs.MaskedDense.t:type_name -> internal.IDLs.Triangle
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_tensor_internal_IDLs_generated_proto_init() }
func file_pkg_tensor_internal_IDLs_generated_proto_init() {
	if File_pkg_tensor_internal_IDLs_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_tensor_internal_IDLs_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaskedDense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_tensor_internal_IDLs_generated_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_tensor_internal_IDLs_generated_proto_goTypes,
		DependencyIndexes: file_pkg_tensor_internal_IDLs_generated_proto_depIdxs,
		EnumInfos:         file_pkg_tensor_internal_IDLs_generated_proto_enumTypes,
		MessageInfos:      file_pkg_tensor_internal_IDLs_generated_proto_msgTypes,
	}.Build()
	File_pkg_tensor_internal_IDLs_generated_proto = out.File
	file_pkg_tensor_internal_IDLs_generated_proto_rawDesc = nil
	file_pkg_tensor_internal_IDLs_generated_proto_goTypes = nil
	file_pkg_tensor_internal_IDLs_generated_proto_depIdxs = nil
}
