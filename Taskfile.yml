version: "3"

vars:
  GREETING: Hello, Bhojpur Neuron Developer!

tasks:
    default:
        cmds:
        - echo "{{.GREETING}}"
        silent: true

    build-tools:
        desc: Build the Neuron AI/ML software tools
        cmds:
        - GOFLAGS=-mod=mod go build -o bin/neurgen ./cmd/generator/main.go 
        - chmod 755 bin/neurgen
        - cp bin/neurgen $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/gencudnn ./cmd/gencudnn/main.go 
        - chmod 755 bin/gencudnn
        - cp bin/gencudnn $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/cudatest ./cmd/cudatest/main.go 
        - chmod 755 bin/cudatest
        - cp bin/cuda $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/gencublas ./cmd/gencublas/main.go 
        - chmod 755 bin/gencublas
        - cp bin/gencublas $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/genlib ./cmd/genlib/main.go 
        - chmod 755 bin/genlib
        - cp bin/genlib $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/neurctl ./cmd/client/main.go 
        - chmod 755 bin/neurctl
        - cp bin/neurctl $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/neursvr ./cmd/server/main.go 
        - chmod 755 bin/neursvr
        - cp bin/neursvr $GOPATH/bin

    build-desktop:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur Neuron" -os macos -icon neuron.png
        - guiutl package -name "Bhojpur Neuron" -os linux -icon neuron.png
        - guiutl package -name "Bhojpur Neuron" -os windows -icon neuron.png

    package-android:
        desc: Package the mobile application for Android
        cmds:
        - guiutl package -name "Bhojpur Neuron" -os android -appID net.bhojpur.neuron -icon neuron.png

    package-ios:
        desc: Package the mobile application for iOS
        cmds:
        - guiutl package -name "Bhojpur Neuron" -os ios -appID net.bhojpur.neuron -icon neuron.png

    release-macos:
        desc: Release the native application for macOS App Store
        cmds:
        - guiutl release -appID net.bhojpur.neuron -appVersion 1.0 -appBuild 1 -category business

    release-android:
        desc: Release the mobile application for Google Play
        cmds:
        - guiutl release -os android -appID net.bhojpur.neuron -appVersion 1.0 -appBuild 1

    release-ios:
        desc: Release the mobile application for iOS App Store
        cmds:
        - guiutl release -os ios -appID net.bhojpur.neuron -appVersion 1.0 -appBuild 1

    run-basic:
        desc: Run the simple client application from source code
        cmds:
        - GOFLAGS=-mod=mod go run ./internal/basic/main.go

    run-web-server:
        desc: Run the web server application from source code
        cmds:
        - GOFLAGS=-mod=mod go run server.go
 
    run-web-client:
        desc: Run the web client application from source code
        cmds:
        - GOFLAGS=-mod=mod go run client.go

    run-mobile:
        desc: Run the mobile client application on emulator
        cmds:
        - GOFLAGS=-mod=mod go run -tags mobile native/main.go

    run-desktop: 
        desc: Run the desktop application on local host
        cmds:
        - GOFLAGS=-mod=mod go run native/main.go

    generate:
        desc: Generate Go source code from Protocol Buffers
        cmds:
        - flatc -o ./pkg/tensor --go ./pkg/tensor/internal/IDLs/generated.fbs
        - protoc --proto_path=. --proto_path=$GOPATH/src/googleapis --proto_path=$GOPATH/src/github.com/gogo/protobuf --go_out=./pkg/tensor --go_opt=module=github.com/bhojpur/neuron/pkg/tensor pkg/tensor/internal/IDLs/generated.proto
        - protoc --proto_path=. --proto_path=$GOPATH/src/googleapis --proto_path=$GOPATH/src/github.com/gogo/protobuf --go-grpc_out=./pkg/tensor --go-grpc_opt=module=github.com/bhojpur/neuron/pkg/tensor pkg/tensor/internal/IDLs/generated.proto

    test:
        desc: Execute all the Unit Tests
        cmds:
        - gotestsum --junitfile test-results/unit-tests.xml -- -short -race -cover -coverprofile test-results/cover.out ./...

    swagger.gen:
        desc: Generate Go code
        cmds:
        - GOFLAGS=-mod=mod go generate bhojpur.net/neuron/internal bhojpur.net/neuron/pkg/swagger

    swagger.validate:
        desc: Validate all the Swagger API specifications
        cmds:
        - swagger validate pkg/swagger/swagger.yml

    swagger.doc:
        desc: Generate documentation for Swagger specified APIs
        cmds:
        - docker run -i yousan/swagger-yaml-to-html < pkg/swagger/swagger.yml > doc/index.html